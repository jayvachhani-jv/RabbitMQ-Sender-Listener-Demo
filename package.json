{
  "name": "rabbitmq-demo",
  "version": "1.0.0",
  "description": "RabbitMQ sender and listener demo with robust error handling and reconnection logic",
  "main": "sender.js",
  "scripts": {
    "start:sender": "node sender.js",
    "start:listener": "node listener.js",
    "start:dev": "concurrently \"npm run start:sender\" \"npm run start:listener\"",
    "start:local": "dotenv -e env.local -- concurrently \"npm run start:sender\" \"npm run start:listener\"",
    "start:sender:local": "dotenv -e env.local -- node sender.js",
    "start:listener:local": "dotenv -e env.local -- node listener.js",
    "start:sender:docker": "dotenv -e env.docker -- node sender.js",
    "start:listener:docker": "dotenv -e env.docker -- node listener.js",
    "docker:build": "docker build -t rabbitmq-demo .",
    "docker:run": "docker-compose -f docker-compose.app.yml up",
    "docker:stop": "docker-compose -f docker-compose.app.yml down",
    "docker:rabbitmq": "docker-compose up -d",
    "docker:rabbitmq:stop": "docker-compose down",
    "test": "node test-connection.js",
    "test:local": "dotenv -e env.local -- node test-connection.js",
    "test:docker": "dotenv -e env.docker -- node test-connection.js",
    "setup:local": "npm install && npm run docker:rabbitmq && timeout 10 && npm run test:local",
    "setup:docker": "npm install && docker-compose -f docker-compose.app.yml up -d",
    "cleanup": "npm run docker:rabbitmq:stop && docker system prune -f"
  },
  "keywords": [
    "rabbitmq",
    "message-queue",
    "nodejs",
    "docker",
    "microservices"
  ],
  "author": "Jay Vachhani",
  "license": "MIT",
  "dependencies": {
    "amqplib": "^0.10.3"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "dotenv-cli": "^7.3.0"
  },
  "engines": {
    "node": ">=14.0.0"
  }
} 